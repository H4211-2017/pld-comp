#IncludeRegexLine: ^[ 	]*#[ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/AbstractStructure.h
AbstractNode.h
/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/AbstractNode.h

/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/ForStructure.cpp
ForStructure.h
/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/ForStructure.h

/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/ForStructure.h
AbstractStructure.h
/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/AbstractStructure.h
Instruction/ComposedInstruction.h
/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/Instruction/ComposedInstruction.h
Instruction/AbstractInstruction.h
/home/pllefebvre/git/pld-comp/src/flex/AST/Structure/Instruction/AbstractInstruction.h

src/flex/AST/AbstractNode.h
memory
-
cstdlib
-
iostream
-
string
-
Value.h
src/flex/AST/Value.h

src/flex/AST/Expression/AbstractExpression.h
AbstractNode.h
src/flex/AST/Expression/AbstractNode.h

src/flex/AST/Instruction/AbstractInstruction.h
AbstractNode.h
src/flex/AST/Instruction/AbstractNode.h
memory
-

src/flex/AST/Instruction/ComposedInstruction.h
vector
-
AbstractInstruction.h
src/flex/AST/Instruction/AbstractInstruction.h
AbstractExpression.h
src/flex/AST/Instruction/AbstractExpression.h

src/flex/AST/Value.h
utility
-

